<launch>
  
  <node pkg="topic_tools" type="throttle" name="base_scan_throttle" args="messages base_scan 1.0 base_scan_throttled" output="screen"/>
<node pkg="topic_tools" type="throttle" name="tilt_scan_throttle" args="messages tilt_scan 1.0 tilt_scan_throttled" />
<node pkg="topic_tools" type="throttle" name="tilt_scan_filtered_throttle" args="messages tilt_scan_filtered 1.0 tilt_scan_filtered_throttled" />
<node pkg="topic_tools" type="throttle" name="base_scan_marking_throttle" args="messages base_scan_marking 1.0 base_scan_marking_throttled" />

<!-- Filter for tilt laser shadowing/veiling -->
<node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" name="tilt_shadow_filter">
  <remap from="scan" to="tilt_scan" />
  <remap from="cloud_filtered" to="tilt_scan_shadow_filtered" />
  <param name="target_frame" value="base_footprint" />
  <param name="high_fidelity" value="true" />
  <rosparam command="load" file="$(find pr2_navigation_perception)/config/tilt_laser_filters.yaml" />
  <rosparam command="load" file="$(find pr2_navigation_perception)/config/point_cloud_footprint_filter.yaml" />
</node>

<!-- Filter for tilt laser scans that hit the body of the robot -->
<node pkg="pr2_navigation_self_filter" type="self_filter" name="tilt_laser_self_filter" respawn="true" output="screen">

  <!-- The topic for the input cloud -->
  <remap from="cloud_in" to="tilt_scan_shadow_filtered" />

  <!-- The topic for the output cloud -->
  <remap from="cloud_out" to="tilt_scan_filtered" />

 <rosparam command="load" file="$(find pr2_navigation_perception)/config/tilt_self_filter.yaml" />

  <!-- The frame of the sensor used to obtain the data to be
    filtered; This parameter is optional. If it is not specified,
    shadow points will be considered outside -->
  <param name="sensor_frame" type="string" value="laser_tilt_link" />
</node>

<!-- Filter for base laser shadowing/veiling -->
<node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" name="base_shadow_filter" >
  <remap from="scan" to="base_scan" />
  <remap from="cloud_filtered" to="base_scan_shadow_filtered" />
  <param name="target_frame" value="base_footprint" />
  <rosparam command="load" file="$(find pr2_navigation_perception)/config/shadow_filter.yaml" />
  <rosparam command="load" file="$(find pr2_navigation_perception)/config/point_cloud_footprint_filter.yaml" />
</node>

<!-- Filter for base laser scans that hit the body of the robot -->
<node pkg="pr2_navigation_self_filter" type="self_filter" name="base_laser_self_filter" respawn="true" output="screen">

  <!-- The topic for the input cloud -->
  <remap from="cloud_in" to="base_scan_shadow_filtered" />

  <!-- The topic for the output cloud -->
  <remap from="cloud_out" to="base_scan_marking" />

  <!-- The frame of the sensor used to obtain the data to be
    filtered; This parameter is optional. If it is not specified,
    shadow points will be considered outside -->
  <param name="sensor_frame" type="string" value="base_laser_link" />

  <rosparam command="load" file="$(find pr2_navigation_perception)/config/base_self_filter.yaml" />
  
</node>


  
  <node name="ground_object_cloud_throttle" pkg="topic_tools" type="throttle" args="messages ground_object_cloud 3.0 ground_object_cloud_throttled" />
    <node pkg="semantic_point_annotator" type="sac_inc_ground_removal_node" name="sac_ground_removal" >
  <remap from="tilt_laser_cloud_filtered" to="tilt_scan_filtered" />
  <remap from="cloud_ground_filtered" to="ground_object_cloud" />
  <param name="z_threshold" value="0.15" />
  <param name="sac_min_points_per_model" value="40" />
  <param name="sac_distance_threshold" value="0.05" />
  <param name="planar_refine" value="1" />
</node>


</launch>
